{"version":3,"sources":["Todo.spec.js"],"names":[],"mappings":";;AAAA,4BAAwB;;;;AACxB,8BAA0B;;;;AAC1B,sCAAkC;;;;;;;;AAElC,oBAAM,MAAM,EAAE,UAAA,CAAC,EAAI;AACjB,MAAI,MAAM,YAAA;MAAE,QAAQ,YAAA;MAAE,IAAI,YAAA,CAAC;AAC3B,MAAI,QAAQ,GAAG;AACb,MAAE,EAAE,MAAM;AACV,SAAK,EAAE,MAAM;AACb,YAAQ,EAAE,IAAI;GACf,CAAC;;AAEF,MAAI,GAAG,mBAAU,QAAQ,CAAE,CAAC;;AAE5B,GAAC,CAAC,EAAE,CAAE,IAAI,8BAAoB,EAAE,8BAA8B,CAAE,CAAC;;AAEjE,QAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACtB,UAAQ,GAAG,QAAQ,CAAC,EAAE,CAAC;AACvB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,kCAAkC,CAAE,CAAC;;AAEhE,QAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,UAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC1B,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,qCAAqC,CAAE,CAAC;;AAEnE,QAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC3B,UAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAC7B,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,0CAA0C,CAAE,CAAC;;AAExE,MAAI,GAAG,mBAAU,MAAM,CAAE,CAAC;;AAE1B,QAAM,WAAU,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC;AAC7B,UAAQ,GAAG,QAAQ,CAAC;AACpB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,mCAAmC,CAAE,CAAC;;AAEjE,QAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,UAAQ,GAAG,MAAM,CAAC;AAClB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,oCAAoC,CAAE,CAAC;;AAElE,QAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC3B,UAAQ,GAAG,KAAK,CAAC;AACjB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,4CAA4C,CAAE,CAAC;;AAE1E,MAAI,GAAG,mBAAU,MAAM,CAAE,CAAC;AAC1B,MAAI,CAAC,MAAM,EAAE,CAAC;AACd,QAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC3B,UAAQ,GAAG,IAAI,CAAC;AAChB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,0CAA0C,CAAE,CAAC;;AAExE,MAAI,CAAC,MAAM,EAAE,CAAC;AACd,QAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC3B,UAAQ,GAAG,KAAK,CAAC;AACjB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,0CAA0C,CAAE,CAAC;;AAExE,MAAI,GAAG,mBAAU,MAAM,CAAE,CAAC;AAC1B,MAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;AACvB,QAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,UAAQ,GAAG,KAAK,CAAC;AACjB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,kCAAkC,CAAE,CAAC;;AAEhE,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAC","file":"Todo.spec-compiled.js","sourcesContent":["import test from 'tape';\nimport Todo from './Todo';\nimport Stateful from './Stateful';\n\ntest( 'Todo', t => {\n  let actual, expected, todo;\n  let testTodo = {\n    id: 'test',\n    title: 'Test',\n    complete: true,\n  };\n\n  todo = new Todo( testTodo );\n\n  t.ok( todo instanceof Stateful, 'should inherit from Stateful' );\n\n  actual = todo.getId();\n  expected = testTodo.id;\n  t.equal( actual, expected, 'with object, should store the id' );\n\n  actual = todo.getTitle();\n  expected = testTodo.title;\n  t.equal( actual, expected, 'with object, should store the title' );\n\n  actual = todo.isComplete();\n  expected = testTodo.complete;\n  t.equal( actual, expected, 'with object, should store the completion' );\n\n  todo = new Todo( 'Test' );\n\n  actual = typeof todo.getId();\n  expected = 'string';\n  t.equal( actual, expected, 'with title, should generate an id' );\n\n  actual = todo.getTitle();\n  expected = 'Test';\n  t.equal( actual, expected, 'with title, should store the title' );\n\n  actual = todo.isComplete();\n  expected = false;\n  t.equal( actual, expected, 'with title, should default to not complete' );\n\n  todo = new Todo( 'Test' );\n  todo.toggle();\n  actual = todo.isComplete();\n  expected = true;\n  t.equal( actual, expected, 'toggle should complete uncompleted todos' );\n\n  todo.toggle();\n  actual = todo.isComplete();\n  expected = false;\n  t.equal( actual, expected, 'toggle should uncomplete completed todos' );\n\n  todo = new Todo( 'Test' );\n  todo.setTitle( 'New' );\n  actual = todo.getTitle();\n  expected = 'New';\n  t.equal( actual, expected, 'setTitle should change the title' );\n\n  t.end();\n});\n\n"]}