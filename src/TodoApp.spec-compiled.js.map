{"version":3,"sources":["TodoApp.spec.js"],"names":[],"mappings":";;AAAA,4BAAwB;;;;AACxB,oCAAgC;;;;AAChC,sCAAkC;;;;AAClC,8BAA0B;;;;;;AAE1B,oBAAM,SAAS,EAAE,UAAA,CAAC,EAAI;AACpB,MAAI,MAAM,YAAA;MAAE,QAAQ,YAAA;MAAE,GAAG,YAAA,CAAC;;AAE1B,KAAG,GAAG,uBAAa,CAAC;;AAEpB,GAAC,CAAC,EAAE,CAAE,GAAG,8BAAoB,EAAE,8BAA8B,CAAE,CAAC;;AAEhE,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC/B,UAAQ,GAAG,KAAK,CAAC;AACjB,GAAC,CAAC,SAAS,CAAE,MAAM,EAAE,QAAQ,EAAE,+BAA+B,CAAE,CAAC;;AAEjE,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;AACxB,UAAQ,GAAG,EAAE,CAAC;AACd,GAAC,CAAC,SAAS,CAAE,MAAM,EAAE,QAAQ,EAAE,oCAAoC,CAAE,CAAC;;AAEtE,KAAG,CAAC,OAAO,CAAE,MAAM,CAAE,CAAC;;AAEtB,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC/B,UAAQ,GAAG,CAAC,CAAC;AACb,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,2BAA2B,CAAE,CAAC;;AAEzD,MAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAE,CAAC,CAAE,CAAC;AAC/B,QAAM,GAAG,IAAI,0BAAgB,CAAC;AAC9B,GAAC,CAAC,EAAE,CAAE,MAAM,EAAE,4CAA4C,CAAE,CAAC;;AAE7D,QAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzB,UAAQ,GAAG,MAAM,CAAC;AAClB,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,yDAAyD,CAAE,CAAC;;AAEvF,KAAG,CAAC,YAAY,EAAE,CAAC;AACnB,MAAI,CAAC,MAAM,EAAE,CAAC;AACd,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC/B,UAAQ,GAAG,CAAC,CAAC;AACb,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,iCAAiC,CAAE,CAAC;;AAE/D,KAAG,CAAC,YAAY,EAAE,CAAC;AACnB,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC/B,UAAQ,GAAG,CAAC,CAAC;AACb,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,2CAA2C,CAAE,CAAC;;AAEzE,KAAG,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,CAAE,CAAC;AAC3B,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC/B,UAAQ,GAAG,CAAC,CAAC;AACb,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,uCAAuC,CAAE,CAAC;;AAErE,KAAG,CAAC,QAAQ,CAAC,CAAE,mBAAU,GAAG,CAAE,EAAE,mBAAU,GAAG,CAAE,CAAE,CAAC,CAAC;AACnD,QAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC/B,UAAQ,GAAG,CAAC,CAAC;AACb,GAAC,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,wDAAwD,CAAE,CAAC;;AAEtF,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAC","file":"TodoApp.spec-compiled.js","sourcesContent":["import test from 'tape';\nimport TodoApp from './TodoApp';\nimport Stateful from './Stateful';\nimport Todo from './Todo';\n\ntest( 'TodoApp', t => {\n  let actual, expected, app;\n\n  app = new TodoApp();\n\n  t.ok( app instanceof Stateful, 'should inherit from Stateful' );\n\n  actual = app.getState().filter;\n  expected = false;\n  t.deepEqual( actual, expected, 'should begin without a filter' );\n\n  actual = app.getTodos();\n  expected = [];\n  t.deepEqual( actual, expected, 'should begin an empty set of todos' );\n\n  app.addTodo( 'Test' );\n\n  actual = app.getTodos().length;\n  expected = 1;\n  t.equal( actual, expected, 'addTodo should add a todo' );\n\n  let todo = app.getTodos()[ 0 ];\n  actual = todo instanceof Todo;\n  t.ok( actual, 'addTodo should add todos as Todo instances' );\n\n  actual = todo.getTitle();\n  expected = 'Test';\n  t.equal( actual, expected, 'addTodo should set the title of the todo to that passed' );\n\n  app.toggleFilter();\n  todo.toggle();\n  actual = app.getTodos().length;\n  expected = 0;\n  t.equal( actual, expected, 'should use filter to hide todos' );\n\n  app.toggleFilter();\n  actual = app.getTodos().length;\n  expected = 1;\n  t.equal( actual, expected, 'should show all todos when filter removed' );\n\n  app.rmTodo( todo.getId() );\n  actual = app.getTodos().length;\n  expected = 0;\n  t.equal( actual, expected, 'rmTodo should remove a todo by its id' );\n\n  app.setTodos([ new Todo( '1' ), new Todo( '2' ) ]);\n  actual = app.getTodos().length;\n  expected = 2;\n  t.equal( actual, expected, 'setTodos should replace all todos witht those provided' );\n\n  t.end();\n});\n\n"]}